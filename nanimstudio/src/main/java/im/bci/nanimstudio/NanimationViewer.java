/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package im.bci.nanimstudio;

import im.bci.nanimstudio.model.Nanimation;
import java.awt.Canvas;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author bob
 */
public class NanimationViewer extends javax.swing.JPanel {

    private Nanimation animation;
    private final RenderingThread renderingThread;

    public Nanimation getAnimation() {
        return animation;
    }

    public void setAnimation(Nanimation animation) {
        renderingThread.setAnimation(animation);
        this.animation = animation;
    }

    private class RenderingThread extends Thread {

        int c = 1;
        private final Canvas canvas;

        private RenderingThread(Canvas canvas) {
            setDaemon(true);
            this.canvas = canvas;
        }

        @Override
        public void run() {
            try {
                while (!canvas.isVisible()) {

                    RenderingThread.sleep(100);

                }
                canvas.createBufferStrategy(2);
                BufferStrategy bs = canvas.getBufferStrategy();
                for (;;) {
                    Graphics g = bs.getDrawGraphics();
                    try {
                        g.drawOval(0, 0, c, c);
                        ++c;
                        if (c > 100) {
                            c = 1;
                        }
                    } finally {
                        g.dispose();
                    }
                    bs.show();
                    RenderingThread.sleep(1);
                }
            } catch (InterruptedException ex) {
                return;
            }
        }

        private void setAnimation(Nanimation animation) {
            if (null != animation) {
                if (!isAlive()) {
                    start();
                }
            }

        }
    }

    /**
     * Creates new form NanimationViewer
     */
    public NanimationViewer() {
        initComponents();
        jPanel_animation.setIgnoreRepaint(true);
        Canvas canvas = new Canvas();
        canvas.setIgnoreRepaint(true);
        jPanel_animation.add(canvas);

        this.renderingThread = new RenderingThread(canvas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel_animation = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        jButton1.setText("play once");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        add(jButton1, gridBagConstraints);

        jButton2.setText("play loop");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        add(jButton2, gridBagConstraints);

        jPanel_animation.setBackground(new java.awt.Color(204, 204, 255));
        jPanel_animation.setLayout(new javax.swing.BoxLayout(jPanel_animation, javax.swing.BoxLayout.LINE_AXIS));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel_animation, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel_animation;
    // End of variables declaration//GEN-END:variables
}
